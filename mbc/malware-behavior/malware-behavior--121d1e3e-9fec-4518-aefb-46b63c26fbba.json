{
    "type": "bundle",
    "id": "bundle--021731bc-3429-461b-9a46-6ec7d734bea6",
    "objects": [
        {
            "type": "malware-behavior",
            "spec_version": "2.1",
            "id": "malware-behavior--121d1e3e-9fec-4518-aefb-46b63c26fbba",
            "created_by_ref": "identity--b73c59c1-8560-449a-b8d0-c2ce0533c5bf",
            "created": "2020-10-13T00:00:00.000Z",
            "modified": "2024-02-06T00:00:00.000Z",
            "name": "Encrypt Data",
            "obj_defn": {
                "source_name": "mitre-mbc",
                "description": "Malware may encrypt data.",
                "url": "https://github.com/MBCProject/mbc-markdown/blob/main/micro-behaviors/cryptography/encrypt-data.md",
                "external_id": "C0027"
            },
            "objective_refs": [
                "malware-objective--aa176dc6-7969-4333-8b7b-677c92341818"
            ],
            "detection_rules": [
                {
                    "rule_type": "capa",
                    "rule_name": "encrypt or decrypt via WinCrypt",
                    "url": "https://github.com/mandiant/capa-rules/blob/master/data-manipulation/encryption/encrypt-or-decrypt-via-wincrypt.yml",
                    "api_fncs": [
                        "CryptEncrypt",
                        "CryptDecrypt",
                        "CryptAcquireContext",
                        "CryptGenKey",
                        "CryptImportKey"
                    ]
                },
                {
                    "rule_type": "capa",
                    "rule_name": "encrypt data using memfrob from glibc",
                    "url": "https://github.com/mandiant/capa-rules/blob/master/data-manipulation/encryption/encrypt-data-using-memfrob-from-glibc.yml",
                    "api_fncs": [
                        "memfrob"
                    ]
                },
                {
                    "rule_type": "capa",
                    "rule_name": "encrypt data using HC-128",
                    "url": "https://github.com/mandiant/capa-rules/blob/master/data-manipulation/encryption/hc-128/encrypt-data-using-hc-128.yml",
                    "detect_ref": "malware-method--0b2b7f04-b511-4bdc-b4ef-11667a74bde3"
                },
                {
                    "rule_type": "capa",
                    "rule_name": "encrypt data using HC-128 via WolfSSL",
                    "url": "https://github.com/mandiant/capa-rules/blob/master/data-manipulation/encryption/hc-128/encrypt-data-using-hc-128-via-wolfssl.yml",
                    "detect_ref": "malware-method--0b2b7f04-b511-4bdc-b4ef-11667a74bde3"
                },
                {
                    "rule_type": "capa",
                    "rule_name": "encrypt data using RC6",
                    "url": "https://github.com/mandiant/capa-rules/blob/master/data-manipulation/encryption/rc6/encrypt-data-using-rc6.yml",
                    "detect_ref": "malware-method--9858fb87-fa9e-447c-91e7-951bd80d8666"
                },
                {
                    "rule_type": "capa",
                    "rule_name": "encrypt data using twofish",
                    "url": "https://github.com/mandiant/capa-rules/blob/master/data-manipulation/encryption/twofish/encrypt-data-using-twofish.yml",
                    "detect_ref": "malware-method--e3e76b72-4e03-434e-b817-345b07479c83"
                },
                {
                    "rule_type": "capa",
                    "rule_name": "encrypt data using AES MixColumns step",
                    "url": "https://github.com/mandiant/capa-rules/blob/master/data-manipulation/encryption/aes/encrypt-data-using-aes-mixcolumns-step.yml",
                    "detect_ref": "malware-method--d46dd942-933e-46a7-b606-e8202659c4a3"
                },
                {
                    "rule_type": "capa",
                    "rule_name": "encrypt data using AES via WinAPI",
                    "url": "https://github.com/mandiant/capa-rules/blob/master/data-manipulation/encryption/aes/encrypt-data-using-aes-via-winapi.yml",
                    "api_fncs": [
                        "CryptGenKey",
                        "CryptDeriveKey",
                        "CryptImportKey",
                        "CryptAcquireContext",
                        "CryptEncrypt",
                        "CryptDecrypt"
                    ],
                    "detect_ref": "malware-method--d46dd942-933e-46a7-b606-e8202659c4a3"
                },
                {
                    "rule_type": "capa",
                    "rule_name": "encrypt data using AES via .NET",
                    "url": "https://github.com/mandiant/capa-rules/blob/master/data-manipulation/encryption/aes/encrypt-data-using-aes-via-dotnet.yml",
                    "detect_ref": "malware-method--d46dd942-933e-46a7-b606-e8202659c4a3"
                },
                {
                    "rule_type": "capa",
                    "rule_name": "manually build AES constants",
                    "url": "https://github.com/mandiant/capa-rules/blob/master/data-manipulation/encryption/aes/manually-build-aes-constants.yml",
                    "detect_ref": "malware-method--d46dd942-933e-46a7-b606-e8202659c4a3"
                },
                {
                    "rule_type": "capa",
                    "rule_name": "encrypt data using Sosemanuk",
                    "url": "https://github.com/mandiant/capa-rules/blob/master/data-manipulation/encryption/sosemanuk/encrypt-data-using-sosemanuk.yml",
                    "detect_ref": "malware-method--516f85c6-e42f-4f15-91df-975b211b4292"
                },
                {
                    "rule_type": "capa",
                    "rule_name": "encrypt data using Camellia",
                    "url": "https://github.com/mandiant/capa-rules/blob/master/data-manipulation/encryption/camellia/encrypt-data-using-camellia.yml",
                    "detect_ref": "malware-method--f9ce02a4-c3a5-4e2c-b923-48913b8cb838"
                },
                {
                    "rule_type": "capa",
                    "rule_name": "encrypt data using vest",
                    "url": "https://github.com/mandiant/capa-rules/blob/master/data-manipulation/encryption/vest/encrypt-data-using-vest.yml"
                },
                {
                    "rule_type": "capa",
                    "rule_name": "encrypt data using DPAPI",
                    "url": "https://github.com/mandiant/capa-rules/blob/master/data-manipulation/encryption/dpapi/encrypt-data-using-dpapi.yml",
                    "api_fncs": [
                        "CryptProtectMemory",
                        "CryptUnprotectMemory",
                        "crypt32.CryptProtectData",
                        "crypt32.CryptUnprotectData",
                        "System.Security.Cryptography.ProtectedData::Unprotect",
                        "System.Security.Cryptography.ProtectedData::Protect",
                        "SystemFunction040",
                        "SystemFunction041"
                    ]
                },
                {
                    "rule_type": "capa",
                    "rule_name": "encrypt data using DES",
                    "url": "https://github.com/mandiant/capa-rules/blob/master/data-manipulation/encryption/des/encrypt-data-using-des.yml",
                    "detect_ref": "malware-method--1e90325a-dd63-41d6-be62-a5810e11baf7"
                },
                {
                    "rule_type": "capa",
                    "rule_name": "encrypt data using DES via WinAPI",
                    "url": "https://github.com/mandiant/capa-rules/blob/master/data-manipulation/encryption/des/encrypt-data-using-des-via-winapi.yml",
                    "api_fncs": [
                        "CryptGenKey",
                        "CryptDeriveKey",
                        "CryptImportKey",
                        "CryptAcquireContext",
                        "CryptEncrypt",
                        "CryptDecrypt"
                    ],
                    "detect_ref": "malware-method--1e90325a-dd63-41d6-be62-a5810e11baf7"
                },
                {
                    "rule_type": "capa",
                    "rule_name": "encrypt data using RC4 PRGA",
                    "url": "https://github.com/mandiant/capa-rules/blob/master/data-manipulation/encryption/rc4/encrypt-data-using-rc4-prga.yml",
                    "detect_ref": "malware-method--3a879212-7127-4f91-84ef-7aa65e971ef3"
                },
                {
                    "rule_type": "capa",
                    "rule_name": "encrypt data using RC4 with custom key via WinAPI",
                    "url": "https://github.com/mandiant/capa-rules/blob/master/data-manipulation/encryption/rc4/encrypt-data-using-rc4-with-custom-key-via-winapi.yml",
                    "api_fncs": [
                        "CryptImportKey",
                        "CryptAcquireContext",
                        "CryptEncrypt"
                    ],
                    "detect_ref": "malware-method--3a879212-7127-4f91-84ef-7aa65e971ef3"
                },
                {
                    "rule_type": "capa",
                    "rule_name": "encrypt data using RC4 via WinAPI",
                    "url": "https://github.com/mandiant/capa-rules/blob/master/data-manipulation/encryption/rc4/encrypt-data-using-rc4-via-winapi.yml",
                    "api_fncs": [
                        "CryptGenKey",
                        "CryptDeriveKey",
                        "CryptImportKey",
                        "CryptAcquireContext",
                        "CryptEncrypt",
                        "CryptDecrypt"
                    ],
                    "detect_ref": "malware-method--3a879212-7127-4f91-84ef-7aa65e971ef3"
                },
                {
                    "rule_type": "capa",
                    "rule_name": "encrypt data using RC4 KSA",
                    "url": "https://github.com/mandiant/capa-rules/blob/master/data-manipulation/encryption/rc4/encrypt-data-using-rc4-ksa.yml",
                    "detect_ref": "malware-method--3a879212-7127-4f91-84ef-7aa65e971ef3"
                },
                {
                    "rule_type": "capa",
                    "rule_name": "encrypt data using skipjack",
                    "url": "https://github.com/mandiant/capa-rules/blob/master/data-manipulation/encryption/skipjack/encrypt-data-using-skipjack.yml",
                    "detect_ref": "malware-method--3d98ca18-c0fc-44b4-8c11-3e17e0cbba87"
                },
                {
                    "rule_type": "capa",
                    "rule_name": "encrypt data using blowfish",
                    "url": "https://github.com/mandiant/capa-rules/blob/master/data-manipulation/encryption/blowfish/encrypt-data-using-blowfish.yml",
                    "detect_ref": "malware-method--7bfa4c7e-15a3-4c9d-b44a-757a17775c5e"
                },
                {
                    "rule_type": "cape",
                    "rule_name": "rat_dcrat",
                    "url": "https://github.com/CAPESandbox/community/blob/master/modules/signatures/windows/rat_dcrat.py",
                    "api_fncs": [
                        "CryptHashData"
                    ],
                    "class": "DCRatAPIs"
                },
                {
                    "rule_type": "cape",
                    "rule_name": "rat_nanocore",
                    "url": "https://github.com/CAPESandbox/community/blob/master/modules/signatures/windows/rat_nanocore.py",
                    "api_fncs": [
                        "CryptHashData"
                    ]
                },
                {
                    "rule_type": "cape",
                    "rule_name": "ransomware_crypto",
                    "url": "https://github.com/CAPESandbox/community/blob/master/modules/signatures/windows/ransomware_crypto.py",
                    "api_fncs": [
                        "CryptEncrypt"
                    ]
                },
                {
                    "rule_type": "cape",
                    "rule_name": "rat_luminosity",
                    "url": "https://github.com/CAPESandbox/community/blob/master/modules/signatures/windows/rat_luminosity.py",
                    "api_fncs": [
                        "CryptHashData"
                    ]
                },
                {
                    "rule_type": "cape",
                    "rule_name": "script_downloader",
                    "url": "https://github.com/CAPESandbox/community/blob/master/modules/signatures/windows/script_downloader.py",
                    "api_fncs": [
                        "SslEncryptPacket"
                    ]
                },
                {
                    "rule_type": "cape",
                    "rule_name": "ransomware_filemodifications",
                    "url": "https://github.com/CAPESandbox/community/blob/master/modules/signatures/windows/ransomware_filemodifications.py"
                },
                {
                    "rule_type": "cape",
                    "rule_name": "rat_blackremote",
                    "url": "https://github.com/CAPESandbox/community/blob/master/modules/signatures/windows/rat_blackremote.py",
                    "api_fncs": [
                        "CryptHashData"
                    ]
                },
                {
                    "rule_type": "cape",
                    "rule_name": "malware_data_encryption",
                    "url": "https://github.com/CAPESandbox/community/blob/master/modules/signatures/windows/malware_data_encryption.py",
                    "api_fncs": [
                        "CryptEncrypt"
                    ]
                },
                {
                    "rule_type": "cape",
                    "rule_name": "malware_data_encryption",
                    "url": "https://github.com/CAPESandbox/community/blob/master/modules/signatures/windows/malware_data_encryption.py",
                    "api_fncs": [
                        "CryptEncrypt",
                        "GetComputerNameW",
                        "GetUserNameW"
                    ]
                },
                {
                    "rule_type": "cape",
                    "rule_name": "malware_data_encryption",
                    "url": "https://github.com/CAPESandbox/community/blob/master/modules/signatures/windows/malware_data_encryption.py",
                    "api_fncs": [
                        "CryptEncrypt",
                        "GetComputerNameW",
                        "GetUserNameW"
                    ]
                }
            ],
            "snippets": [
                {
                    "snippet": "push    ebx\nmov     ebx, [esp+4+arg_4]\npush    esi\nlea     eax, [ebx+20h]\npush    eax             ; unsigned int\ncall    ??2@YAPAXI@Z    ; operator new(uint)\nmov     ecx, [esp+0Ch+arg_C]\nmov     edx, eax\nadd     esp, 4\nmov     esi, [ecx]\nmov     [edx], esi\nmov     esi, [ecx+4]\nmov     [edx+4], esi\nmov     ecx, [ecx+8]\nmov     [edx+8], ecx\nmov     edx, [esp+8+arg_8]\ntest    ebx, ebx\nmov     [eax+0Ch], edx\njle     short loc_B\nmov     esi, [esp+8+arg_0]\npush    edi\nmov     edi, 0FFFFFFFDh\nlea     edx, [eax+3]\nsub     edi, eax\n\nloc_A:\nmov     cl, [edx-3]\nxor     cl, [edx+2]\nxor     cl, [edx-1]\nxor     cl, [edx]\nmov     [edx+0Dh], cl\nxor     [esi], cl\ninc     edx\ninc     esi\nlea     ecx, [edi+edx]\ncmp     ecx, ebx\njl      short loc_A\npop     edi\n\nloc_B:\npush    eax             ; void *\ncall    ??3@YAXPAX@Z    ; operator delete(void *)\nadd     esp, 4\nmov     eax, 1\npop     esi\npop     ebx\nretn",
                    "hash": "SHA256: c86cbf5e78c9f05ecfc11e4f2c147781cef77842a457e19ba690477eb564c22b",
                    "language": "asm",
                    "exemplify_ref": "malware-behavior--121d1e3e-9fec-4518-aefb-46b63c26fbba"
                }
            ],
            "obj_version": "2.2",
            "external_references": [
                {
                    "source_name": "s2grupo",
                    "description": "\"Evolution of Trickbot,\" S2 Grupo, report, Jun. 2017 [Online].",
                    "url": "https://www.securityartwork.es/wp-content/uploads/2017/07/Trickbot-report-S2-Grupo.pdf"
                },
                {
                    "source_name": "trendmicro-emotet",
                    "description": "\"Exploring Emotet's Activities,\" Trend Micro Research, 2019 [Online].",
                    "url": "https://documents.trendmicro.com/assets/white_papers/ExploringEmotetsActivities_Final.pdf"
                },
                {
                    "source_name": "rascagneres-gravityrat",
                    "description": "P. Rascagneres, \"GravityRAT - The Two-Year Evolution Of An APT Targeting India,\" Talos, blog, Apr. 26, 2018 [Online].",
                    "url": "https://blog.talosintelligence.com/2018/04/gravityrat-two-year-evolution-of-apt.html"
                },
                {
                    "source_name": "fireeye-poisonivy",
                    "description": "\"Poison Ivy: Assessing Damange and Extracting Intelligence,\" FireEye, Special Report, 2014 [Online].",
                    "url": "https://www.mandiant.com/sites/default/files/2021-09/rpt-poison-ivy.pdf"
                },
                {
                    "source_name": "fireeye-apt28",
                    "description": "\"APT28: A Window into Russia's Cyber Espionage Operations?\" FireEye, 2014 [Online].",
                    "url": "https://www2.fireeye.com/rs/fireye/images/rpt-apt28.pdf"
                },
                {
                    "source_name": "dong-matanbuchus",
                    "description": "C. Dong, \"MATANBUCHUS: Another Loader as a Service Malware,\" Offset Training Solutions, blog, Feb. 15, 2022 [Online].",
                    "url": "https://www.0ffset.net/reverse-engineering/matanbuchus-loader-analysis/"
                },
                {
                    "source_name": "cohen-matabuchus",
                    "description": "B. Cohen, \"Inside Matanbuchus: A Quirky Loader,\" CyberArk, blog, Jul. 26, 2022 [Online].",
                    "url": "https://www.cyberark.com/resources/threat-research-blog/inside-matanbuchus-a-quirky-loader"
                },
                {
                    "source_name": "capa analysis",
                    "description": "Analysis output, capa 4.0, analyzed at MITRE on Oct. 12, 2022.",
                    "url": "https://github.com/mandiant/capa-rules"
                }
            ],
            "object_marking_refs": [
                "marking-definition--093b6375-cd45-4aa3-8f91-6a03ddd7a3d3"
            ],
            "extensions": {
                "extension-definition--d57b7c9c-7fa6-436b-b82c-8e6f69cdc3d0": {
                    "extension_type": "new-sdo"
                }
            }
        }
    ]
}